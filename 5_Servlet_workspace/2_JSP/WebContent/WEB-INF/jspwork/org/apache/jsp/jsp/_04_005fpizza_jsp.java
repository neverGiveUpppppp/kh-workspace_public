/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-04-25 11:16:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Date;

public final class _04_005fpizza_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/jsp/today.jsp", Long.valueOf(1650512306000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Date");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html style=\"background: RGB(255,236,246);\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("	table{border: 1px solid black; border-collapse: collapse;}\r\n");
      out.write("	th, td {border:1px solid black; padding:10px;}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<h1>오늘은 <span style=\"color: pink;\">");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("\r\n");
      out.write("<title> jsp/today.jsp </title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	");

		Date now = new Date();
		String today = String.format("%tY년 %tm %td일 %tA", now, now, now, now);
	
	
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	");
      out.print( today );
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</span> 입니다.</h1>\r\n");
      out.write("	<h1>피자 아카데미</h1>\r\n");
      out.write("    \r\n");
      out.write("    <table>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <th>종류</th>\r\n");
      out.write("            <th>이름</th>\r\n");
      out.write("            <th>가격</th>\r\n");
      out.write("            <th rowspan=\"12\"></th>\r\n");
      out.write("            <th>종류</th>\r\n");
      out.write("            <th>이름</th>\r\n");
      out.write("            <th>가격</th>\r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td rowspan=\"5\">피자</td>\r\n");
      out.write("            <td>치즈피자</td>\r\n");
      out.write("            <td>5000</td>\r\n");
      out.write("            <td rowspan=\"12\">사이드</td>\r\n");
      out.write("            <td>오븐구이통닭</td>                         \r\n");
      out.write("            <td>9000</td>                         \r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td>콤비네이션피자</td>\r\n");
      out.write("            <td>6000</td>\r\n");
      out.write("            <td>치킨스틱&윙</td>                         \r\n");
      out.write("            <td>4900</td>                         \r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td>포테이토피자</td>\r\n");
      out.write("            <td>7000</td>\r\n");
      out.write("            <td>치즈오븐스파게티</td>                         \r\n");
      out.write("            <td>4000</td>                         \r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td>고구마피자</td>\r\n");
      out.write("            <td>7000</td>\r\n");
      out.write("            <td>새우링&웨지감자</td>                         \r\n");
      out.write("            <td>3500</td>                         \r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td>불고기피자</td>\r\n");
      out.write("            <td>8000</td>\r\n");
      out.write("            <td>갈릭포테이토</td>                         \r\n");
      out.write("            <td>3000</td>                         \r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td rowspan=\"6\">토핑</td>\r\n");
      out.write("            <td>고구마무스</td>\r\n");
      out.write("            <td>1000</td>\r\n");
      out.write("            <td>콜라</td>                         \r\n");
      out.write("            <td>1500</td>                         \r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td>콘크림무스</td>\r\n");
      out.write("            <td>1500</td>\r\n");
      out.write("            <td>사이다</td>                         \r\n");
      out.write("            <td>1500</td>                         \r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td>파인애플토핑</td>\r\n");
      out.write("            <td>2000</td>\r\n");
      out.write("            <td>갈릭소스</td>                         \r\n");
      out.write("            <td>500</td>                         \r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td>치즈토핑</td>\r\n");
      out.write("            <td>2000</td>\r\n");
      out.write("            <td>피클</td>                         \r\n");
      out.write("            <td>300</td>                         \r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td>치즈크러스트</td>\r\n");
      out.write("            <td>2000</td>\r\n");
      out.write("            <td>핫소스</td>                         \r\n");
      out.write("            <td>100</td>                         \r\n");
      out.write("        </tr>\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td>치즈바이트</td>\r\n");
      out.write("            <td>3000</td>\r\n");
      out.write("            <td>파마산 치즈가루</td>                         \r\n");
      out.write("            <td>100</td>                         \r\n");
      out.write("        </tr>\r\n");
      out.write("    </table>\r\n");
      out.write("    <br><br>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 기존방식 --><!-- <form action=\"/2_JSP/confirmPizza\" name=\"myInfoForm\" method=\"post\"> -->\r\n");
      out.write("\r\n");
      out.write("<!-- 앞으로할 방식 -->  <form action=\"");
      out.print( request.getContextPath() );
      out.write("/confirmPizza\" name=\"my InfoForm\" method=\"post\">\r\n");
      out.write("					<!-- 변수명.getContextPath(): 내 컨텍스트 루트를 반환하는 역할 -->\r\n");
      out.write("					<!-- < %= request.getContextPath() %> : 내가 가지고 있는 컨텍스트 루트를 뽑아주는 역할 -->\r\n");
      out.write("					<!-- 폼액션에서 컨텍스트 루트 설정했으니 web.xml로 가서 servlet,servlet-mapping태그 설정해주자 -->\r\n");
      out.write("\r\n");
      out.write("       	\r\n");
      out.write("       	피자&nbsp;&nbsp; &nbsp; :\r\n");
      out.write("		<select id=\"pizza\" name=\"pizza\" required>\r\n");
      out.write("		<option value=\"치즈피자\" >치즈피자</option>\r\n");
      out.write("		<option value=\"콤비네이션피자\">콤비네이션피자</option>\r\n");
      out.write("		<option value=\"포테이토피자\" > 포테이토피자</option>\r\n");
      out.write("		<option value=\"고구마피자\">고구마피자</option>\r\n");
      out.write("		<option value=\"불고기피자\">불고기피자</option>\r\n");
      out.write("		</select>\r\n");
      out.write("<!-- 	\r\n");
      out.write("		 ※ value에 피자이름 + 가격을 같이 넣어 보내기> ※\r\n");
      out.write("		 /를 기준으로 split해서  \r\n");
      out.write("		 value=\"치즈피자/5000\"\r\n");
      out.write("				str[0] : 피자명 \r\n");
      out.write("				str[1] : 피자가격 \r\n");
      out.write("				가격은 또 숫자로 더해줘야하니 Integer.parseInt로 형변환해서 계산\r\n");
      out.write("				\r\n");
      out.write("		<select id=\"pizza\" name=\"pizza\" required>\r\n");
      out.write("		<option value=\"치즈피자/5000\">치즈피자</option>\r\n");
      out.write("		<option value=\"콤비네이션피자/6000\">콤비네이션피자</option>\r\n");
      out.write("		<option value=\"포테이토피자/7000\">포테이토피자</option>\r\n");
      out.write("		<option value=\"고구마피자/7000\">고구마피자</option >\r\n");
      out.write("		<option value=“불고기피자/8000\">불고기피자</option >\r\n");
      out.write("		</select>\r\n");
      out.write("\r\n");
      out.write(" -->\r\n");
      out.write("		<br>\r\n");
      out.write("		<!-- value=\"\" 값 지정 -->\r\n");
      out.write("		<!-- 선택할 메뉴를 view에 보여줘야 하기 때문에 메뉴명과 value값을 동일하게 해야한다  -->\r\n");
      out.write("		\r\n");
      out.write("		토핑&nbsp;&nbsp;&nbsp; :\r\n");
      out.write("		<input type=\"checkbox\" name=\"topping\" id=\"topping1\" value=\"고구마무스\">고구마무스\r\n");
      out.write("		<input type=\"checkbox\" name=\"topping\" id=\"topping2\" value=\"콘크림무스\">콘크림무스\r\n");
      out.write("		<input type=\"checkbox\" name=\"topping\" id=\"topping3\" value=\"파인애플토핑\">파인애플토핑\r\n");
      out.write("		<input type=\"checkbox\" name=\"topping\" id=\"topping4\" value=\"치즈토핑\">치즈토핑\r\n");
      out.write("		<input type=\"checkbox\" name=\"topping\" id=\"topping5\" value=\"치즈크러스트\">치즈크러스트\r\n");
      out.write("		<input type=\"checkbox\" name=\"topping\" id=\"topping6\" value=\"치즈바이트\">치즈바이트\r\n");
      out.write("\r\n");
      out.write("		사이드 :\r\n");
      out.write("		<input type=\"checkbox\" name=\"side\" id=\"side1\" value=\"오븐구이통닭\">오븐구이통닭\r\n");
      out.write("		<input type=\"checkbox\" name=\"side\" id=\"side2\" value=\"치킨스틱&윙\">치킨스틱&윙\r\n");
      out.write("		<input type=\"checkbox\" name=\"side\" id=\"side3\" value=\"치즈오븐스파게티\">치즈오븐스파게티\r\n");
      out.write("		<input type=\"checkbox\" name=\"side\" id=\"side4\" value=\"새우링&웨지감자\">새우링&웨지감자\r\n");
      out.write("		<input type=\"checkbox\" name=\"side\" id=\"side5\" value=\"갈릭포테이토\">갈릭포테이토\r\n");
      out.write("		<input type=\"checkbox\" name=\"side\" id=\"side6\" value=\"콜라\">콜라\r\n");
      out.write("		<input type=\"checkbox\" name=\"side\" id=\"side7\" value=\"사이다\">사이다\r\n");
      out.write("		<input type=\"checkbox\" name=\"side\" id=\"side8\" value=\"갈릭소스\">갈릭소스\r\n");
      out.write("		<input type=\"checkbox\" name=\"side\" id=\"side9\" value=\"피클\">피클\r\n");
      out.write("		<input type=\"checkbox\" name=\"side\" id=\"side10\" value=\"핫소스\">핫소스\r\n");
      out.write("		<input type=\"checkbox\" name=\"side\" id=\"side11\" value=\"파마산 치즈가루\">파마산 치즈가루\r\n");
      out.write("		<br>\r\n");
      out.write("		<br>\r\n");
      out.write("		\r\n");
      out.write("		<input type=\"submit\" value=\"확인\">\r\n");
      out.write("	</form>\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
