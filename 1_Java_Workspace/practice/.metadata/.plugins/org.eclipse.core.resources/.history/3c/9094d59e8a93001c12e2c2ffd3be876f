package com.kh.example.chap01_poly.test.controller;
import com.kh.example.chap01_poly.test.model.vo.Child1;
import com.kh.example.chap01_poly.test.model.vo.Child2;
import com.kh.example.chap01_poly.test.model.vo.Parent;

public class PolyController {

	// 1. 부모 타입 레퍼런스로 부모 객체를 다룰 때
	// 2. 자식 타입 레퍼런스로 자식 객체를 다룰 때
	// 3. 부모 타입 레퍼런스로 자식 객체를 다룰 때
	// 4. 자식 타입 레퍼런스로 부모 객체를 다룰 때
	
	
	public void method() {
		// 1. 부모 타입 레퍼런스로 부모 객체를 다룰 때		
		System.out.println("1.부모 타입 레퍼런스로 부모 객체를 다룰 때");
		Parent p1 = new Parent();  //  부모 부모
		p1.printParent();
		
		System.out.println();


		// 2. 자식 타입 레퍼런스로 자식 객체를 다룰 때
		System.out.println("2. 자식 타입 레퍼런스로 자식 객체를 다룰 때");
		Child1 c1 = new Child1();  // 자식 자식
		c1.printChild1();          // 처음부터 자기가 확장한 메소드
		c1.printParent();          // 상속 받은 메소드 호출 가능
		
		// 3. 부모 타입 레퍼런스로 자식 객체를 다룰 때
		System.out.println("3. 부모 타입 레퍼런스로 자식 객체를 다룰 때");
		Child2 c2 = new Child2();
		c2.printChild2();          //
		c2.printParent();          //
		
		// 4. 자식 타입 레퍼런스로 부모 객체를 다룰 때
		System.out.println("4. 자식 타입 레퍼런스로 부모 객체를 다룰 때");
		
		
	}		
	
	
	
}
