package com.kh.example.chap03_Date.controller;
import java.util.Calendar;
import java.util.Date;

public class DateController {
	public void method1() {
		Date today = new Date();	// 기본생성자는 현재 시간에 대한 정보를 갖고 객체생성
		System.out.println(today);  // 현재 시각. 초단위까지
		
		System.out.println(today.getTime()); // .getTime() : 1970년도부터 지금까지 흐른 초(second)의 합계
		// Returns the number of milliseconds since January 1, 1970, 00:00:00 GMTrepresented by this Date object.
		
		Date time = new Date(1645668906189L); // 인트 범위를 벗어났기에 long의 접미사 L 꼭 붙일 것
		// Date(long date)
		// 위에 .getTime()으로 얻은 값을 long date에 집어넣은 것
		System.out.println(time);
		
		Date date = new Date(2022,7,13); // new Date()의 취소줄 : 공식API의 Deprecated를 알려주는 것. 사용금지.
	
	}
	public void method2() {
		// Calendar 클래스
		
//		Calendar c = new Calendar(); 		 // error : 추상 클래스라 객체생성 불가능 + 기본 생성자가 protected임
		Calendar c = Calendar.getInstance(); // getInstance() : 캘린더에 있는 static 메소드를 사용한 것
		System.out.println(c);		// []안에 , 기준으로 각각 시간값을 가지고 있는 데이터
		
		int year = c.get(Calendar.YEAR);
		int month = c.get(Calendar.MONTH);
		int date = c.get(Calendar.DATE);
		int ampm = c.get(Calender.AM_PM); // 오전=0 오후1
		
		System.out.println(year);  // 2022
		System.out.println(month); // 1    : month는 0부터 시작하기에 +1해야 월이 제대로 출력됨
		System.out.println(date);
		System.out.println(amp);
		// 날짜에서 해당 달은 0부터 시작(제로인덱스)
		// 1월 = 0 
		// 2월은 = 1
		// 11월  = 10
		// 12월  = 11
		
	}
	
	
}
