/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-05-28 10:37:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class _01_005fuseBean_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<p>객체값 통째로 찍기</p>\r\n");
      out.write("	\r\n");
      out.write("	");
      action.model.vo.Person put_varName_n_ref = null;
      put_varName_n_ref = (action.model.vo.Person) _jspx_page_context.getAttribute("put_varName_n_ref", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (put_varName_n_ref == null){
        put_varName_n_ref = new action.model.vo.Person();
        _jspx_page_context.setAttribute("put_varName_n_ref", put_varName_n_ref, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n");
      out.write("	객체값 통째로 찍기 : ");
      out.print( put_varName_n_ref );
      out.write("\r\n");
      out.write("	 \r\n");
      out.write("	<br>\r\n");
      out.write("	<!-- 안에 있는 값을 가져올 것임  -->\r\n");
      out.write("	<!-- get역할을 하는 jsp:getProperty 사용  -->\r\n");
      out.write("	이름 : ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((action.model.vo.Person)_jspx_page_context.findAttribute("put_varName_n_ref")).getName())));
      out.write("<br> ");
      out.write(" <!-- person1이 레퍼런스가 되는 것임. 레퍼런스로 참조할 것이 person1. 여기서 가져올 것이 이름 가져올거라 name 기술하면됨 -->\r\n");
      out.write("	성별 : ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((action.model.vo.Person)_jspx_page_context.findAttribute("put_varName_n_ref")).getGender())));
      out.write("<br>\r\n");
      out.write("	나이 : ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((action.model.vo.Person)_jspx_page_context.findAttribute("put_varName_n_ref")).getNai())));
      out.write("<br>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("<h2> 1.표준 액션 태그  useBean으로 vo클래스 객체 불러오기</h2>\r\n");
      out.write("	\r\n");
      out.write("	");
      action.model.vo.Person per = null;
      per = (action.model.vo.Person) _jspx_page_context.getAttribute("per", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (per == null){
        per = new action.model.vo.Person();
        _jspx_page_context.setAttribute("per", per, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<!-- set으로 a값 넣기 : value속성값 -->\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("per"), "name", "a", null, null, false);
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<span>jsp:useBean & getProperty로 vo클래스 값 가져오기 :</span> \r\n");
      out.write("	");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((action.model.vo.Person)_jspx_page_context.findAttribute("per")).getName())));
      out.write("<br><br>\r\n");
      out.write("\r\n");
      out.write("<br><hr><br>\r\n");
      out.write("<h2> 2.표준 액션 태그 중 useBean을 사용하여 vo클래스에 데이터 초기화</h2>\r\n");
      out.write("	");
      action.model.vo.Person p = null;
      p = (action.model.vo.Person) _jspx_page_context.getAttribute("p", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (p == null){
        p = new action.model.vo.Person();
        _jspx_page_context.setAttribute("p", p, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("p"), "name", "b", null, null, false);
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<span>jsp:useBean & getProperty로 vo클래스 값 가져오기 : </span>\r\n");
      out.write("	");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((action.model.vo.Person)_jspx_page_context.findAttribute("p")).getName())));
      out.write("<br><br>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	이름 : ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((action.model.vo.Person)_jspx_page_context.findAttribute("p")).getName())));
      out.write("<br> \r\n");
      out.write("	성별 : ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((action.model.vo.Person)_jspx_page_context.findAttribute("p")).getGender())));
      out.write("<br>\r\n");
      out.write("	나이 : ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((action.model.vo.Person)_jspx_page_context.findAttribute("p")).getNai())));
      out.write("\r\n");
      out.write("\r\n");
      out.write("<br><hr><br>\r\n");
      out.write("<h2> 3.jsp 표준 액션태그 중 useBean의 param속성 사용하기</h2>\r\n");
 request.setCharacterEncoding("UTF-8"); 
      out.write(" <!-- 자바코드 끌어오는 거니 끝에 세미콜론; -->\r\n");
      out.write("	");
      action.model.vo.Person p3 = null;
      p3 = (action.model.vo.Person) _jspx_page_context.getAttribute("p3", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (p3 == null){
        p3 = new action.model.vo.Person();
        _jspx_page_context.setAttribute("p3", p3, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
        out.write("\r\n");
        out.write("		<!-- 1)param속성 사용 -->\r\n");
        out.write("		");
        org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("p3"), "gender", request.getParameter("gender"), request, "gender", false);
        out.write("\r\n");
        out.write("		");
        org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("p3"), "nai", request.getParameter("nai"), request, "nai", false);
        out.write("\r\n");
        out.write("		");
        org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("p3"), "name", request.getParameter("name"), request, "name", false);
        out.write("\r\n");
        out.write("		<!-- \r\n");
        out.write("			jsp:setProperty에서 \r\n");
        out.write("				 name속성이 useBean의 id속성값에서 객체(여기서는 vo클래스)를 호출해오고 \r\n");
        out.write("				 property속성에서 vo객체 안에 필드명을 지정해준 것\r\n");
        out.write("				 param은 뷰에서 보낸 데이터를 받아오는 역할\r\n");
        out.write("		 -->\r\n");
        out.write("	");
      }
      out.write("\r\n");
      out.write("		이름 : ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((action.model.vo.Person)_jspx_page_context.findAttribute("p3")).getName())));
      out.write("\r\n");
      out.write("		성별 : ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((action.model.vo.Person)_jspx_page_context.findAttribute("p3")).getGender())));
      out.write("\r\n");
      out.write("		나이 : ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((action.model.vo.Person)_jspx_page_context.findAttribute("p3")).getNai())));
      out.write("\r\n");
      out.write("\r\n");
      out.write("<br><br><br>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
