/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-05-25 07:21:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import board.model.vo.*;

public final class foods_005freview_005fChinese_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("board.model.vo");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");

	ArrayList<MZBoard> list = (ArrayList<MZBoard>)request.getAttribute("list");
	Pagination pi = (Pagination)request.getAttribute("pi");

	System.out.println("jsp pi = "+pi); /* 디버깅용 */
	
	

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<title>맛조</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- <link href=\"css/foods_styling.css\" rel=\"stylesheet\"> -->\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\" integrity=\"sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print( request.getContextPath() );
      out.write("/css/foods_styling6.css\" >\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  @media (min-width: 768px){\r\n");
      out.write("    .cardContainer > div {\r\n");
      out.write("      flex-basis: 49%;\r\n");
      out.write("    }\r\n");
      out.write("  }  \r\n");
      out.write("  @media (min-width: 425px){\r\n");
      out.write("    .cardContainer > div {\r\n");
      out.write("      flex-basis: 99%;\r\n");
      out.write("      /* width: 100%; */\r\n");
      out.write("    }\r\n");
      out.write("  }\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("      \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("<header class=\"blog-header py-3\">\r\n");
      out.write("  <div class=\"row flex-nowrap justify-content-between align-items-center\">\r\n");
      out.write("    <div class=\"col-4 pt-1\">\r\n");
      out.write("      <a class=\"link-secondary\" href=\"#\"> </a>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"col-4 text-center\">\r\n");
      out.write("      <span class=\"logo_txt\">대한민국 대표 맛집 커뮤니티</span><a class=\"blog-header-logo\" href=\"#\" >\r\n");
      out.write("      <img class=\"logo_img\" src=\"");
      out.print( request.getContextPath() );
      out.write("/images/logo.png\" alt=\"logo\"></a>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"col-4 d-flex justify-content-end align-items-center\">\r\n");
      out.write("      <a class=\"link-secondary\" href=\"#\" aria-label=\"Search\">\r\n");
      out.write("      </a>\r\n");
      out.write("      </a>\r\n");
      out.write("      <a class=\"btn btn-sm btn-outline-secondary signIn\" href=\"#\">Sign in</a>\r\n");
      out.write("      <a class=\"btn btn-sm btn-outline-secondary signUp\" href=\"#\">Sign up</a>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</header>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"bbb nav-scroller py-1 mb-2 \">\r\n");
      out.write("  <nav class=\"nav d-flex justify-content-between\" >\r\n");
      out.write("    <a class=\"p-2 nav_css\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/board1Kor.bo'\">한식</a>\r\n");
      out.write("    <a class=\"p-2 nav_cssSelect\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/board2Ch.bo'\">중식</a>\r\n");
      out.write("    <a class=\"p-2 nav_css\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/board3West.bo'\">양식</a>\r\n");
      out.write("    <a class=\"p-2 nav_css\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/board4Jp.bo'\">일식</a>\r\n");
      out.write("    <a class=\"p-2 nav_css\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/board5Des.bo'\">디저트</a>\r\n");
      out.write("    <a class=\"p-2 nav_css\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/board1Kor.bo'\">공지사항</a>\r\n");
      out.write("  </nav>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<main class=\"container\">\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"cardContainer\">\r\n");
      out.write("\r\n");
      out.write("  <div class=\"cardBox\" id=\"cardBoxDetail\">\r\n");
      out.write("    <div class=\"\">\r\n");
      out.write("      <img src=\"");
      out.print( request.getContextPath() );
      out.write("/images/review01 palgong.png\" class=\"img-fluid img_cut\"  alt=\"중화요리 팔공 리뷰\">\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"cardBoxText\">\r\n");
      out.write("      <div class=\"card-body\">\r\n");
      out.write("        <strong class=\"mb-lg-1 reviewCategory\">");
      out.print( list.get(0).getFoodType() );
      out.write("<!-- 중식 --></strong><br>\r\n");
      out.write("        <h5 class=\"card-title cardTitle\">");
      out.print( list.get(0).getRestaurantName() );
      out.write("<!-- 식당명 --></h5>\r\n");
      out.write("        <span class=\"reviewDate justify-content-center\" style=\"width:5%\">");
      out.print( list.get(0).getBoardDate() );
      out.write("<!-- 글쓴날짜 --></span><!-- /if문 넣어서 수정하면 modify_date로 -->\r\n");
      out.write("        <span class=\"reviewDate\"> 조회수 : ");
      out.print( list.get(0).getBoardCount() );
      out.write("<!-- 조회수  --></span>\r\n");
      out.write("        <p class=\"card-text mb-auto reviewNormal\">위치 : ");
      out.print( list.get(0).getRestaurantAddress() );
      out.write(" <!-- 장소 --></p>\r\n");
      out.write("        <p class=\"card-text mt-3 mb-auto reviewFeatureTitle\">간단 소개</p>\r\n");
      out.write("        <p class=\"card-text reviewNormal\">");
      out.print( list.get(0).getRestaurantIntro() );
      out.write("\r\n");
      out.write("        </p>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"cardBox\" id=\"cardBoxDetail\">\r\n");
      out.write("      <div class=\"cardImg\">\r\n");
      out.write("        <img src=\"");
      out.print( request.getContextPath() );
      out.write("/images/review02 zzangjangmen.png\" class=\"img-fluid img_cut\"  alt=\"짜장면집 리뷰\">\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"cardTxt\">\r\n");
      out.write("        <div class=\"card-body\">\r\n");
      out.write("          <strong class=\"mb-lg-1 reviewCategory\">");
      out.print( list.get(1).getFoodType() );
      out.write("<!-- 중식 --></strong><br>\r\n");
      out.write("          <h5 class=\"card-title cardTitle\">");
      out.print( list.get(1).getRestaurantName() );
      out.write("<!-- 식당명 --></h5>\r\n");
      out.write("          <span class=\"reviewDate justify-content-center\" style=\"width:5%\">");
      out.print( list.get(1).getBoardDate() );
      out.write("<!-- 글쓴날짜 --></span>\r\n");
      out.write("          <span class=\"reviewDate\"> 조회수 : ");
      out.print( list.get(1).getBoardCount() );
      out.write("<!-- 조회수  --></span>\r\n");
      out.write("        <p class=\"card-text mb-auto reviewNormal\">위치 : ");
      out.print( list.get(1).getRestaurantAddress() );
      out.write(" <!-- 장소 --></p>\r\n");
      out.write("        <p class=\"card-text mt-3 mb-auto reviewFeatureTitle\">간단 소개</p>\r\n");
      out.write("        <p class=\"card-text reviewNormal\">");
      out.print( list.get(1).getRestaurantIntro() );
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"cardBox\" id=\"cardBoxDetail\">\r\n");
      out.write("    <div class=\"\">\r\n");
      out.write("      <img src=\"");
      out.print( request.getContextPath() );
      out.write("/images/review03-1 rubijung.png\" class=\"img-fluid img_cut\"  alt=\"루비정 리뷰\">\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"cardBoxText\">\r\n");
      out.write("      <div class=\"card-body\">\r\n");
      out.write("        <strong class=\"mb-lg-1 reviewCategory\">");
      out.print( list.get(2).getFoodType() );
      out.write("<!-- 중식 --></strong><br>\r\n");
      out.write("        <h5 class=\"card-title cardTitle\">");
      out.print( list.get(2).getRestaurantName() );
      out.write("<!-- 식당명 --></h5>\r\n");
      out.write("        <span class=\"reviewDate justify-content-center\" style=\"width:5%\">");
      out.print( list.get(2).getBoardDate() );
      out.write("<!-- 글쓴날짜 --></span>\r\n");
      out.write("        <span class=\"reviewDate\"> 조회수 : ");
      out.print( list.get(2).getBoardCount() );
      out.write("<!-- 조회수  --></span>\r\n");
      out.write("        <p class=\"card-text mb-auto reviewNormal\">위치 : ");
      out.print( list.get(2).getRestaurantAddress() );
      out.write(" <!-- 장소 --></p>\r\n");
      out.write("        <p class=\"card-text mt-3 mb-auto reviewFeatureTitle\">간단 소개</p>\r\n");
      out.write("        <p class=\"card-text reviewNormal\">");
      out.print( list.get(2).getRestaurantIntro() );
      out.write("        </p>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"cardBox\" id=\"cardBoxDetail\">\r\n");
      out.write("      <div class=\"\">\r\n");
      out.write("        <img src=\"");
      out.print( request.getContextPath() );
      out.write("/images/review04 arachai.png\" class=\"img-fluid img_cut\"  alt=\"아라차이 리뷰\">\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"\">\r\n");
      out.write("        <div class=\"card-body\">\r\n");
      out.write("        <strong class=\"mb-lg-1 reviewCategory\">");
      out.print( list.get(3).getFoodType() );
      out.write("<!-- 중식 --></strong><br>\r\n");
      out.write("        <h5 class=\"card-title cardTitle\">");
      out.print( list.get(3).getRestaurantName() );
      out.write("<!-- 식당명 --></h5>\r\n");
      out.write("        <span class=\"reviewDate justify-content-center\" style=\"width:5%\">");
      out.print( list.get(3).getBoardDate() );
      out.write("<!-- 글쓴날짜 --></span>\r\n");
      out.write("        <span class=\"reviewDate\"> 조회수 : ");
      out.print( list.get(3).getBoardCount() );
      out.write("<!-- 조회수  --></span>\r\n");
      out.write("        <p class=\"card-text mb-auto reviewNormal\">위치 : ");
      out.print( list.get(3).getRestaurantAddress() );
      out.write(" <!-- 장소 --></p>\r\n");
      out.write("        <p class=\"card-text mt-3 mb-auto reviewFeatureTitle\">간단 소개</p>\r\n");
      out.write("        <p class=\"card-text reviewNormal\">");
      out.print( list.get(3).getRestaurantIntro() );
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"pagingArea\" align=\"center\">\r\n");
      out.write("			<!-- 맨 처음으로 -->\r\n");
      out.write("			<button type=\"button\" class=\"btn btn-sm Writing\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/list.bo?currentPage=1'\"> &lt;&lt; </button>\r\n");
      out.write("			\r\n");
      out.write("			<!-- 이전 페이지로 -->\r\n");
      out.write("			<!-- 이전 페이지 기준이 되는 것 : 현재페이지(currentPage) // < %= pi.getMaxPage()-1 %> : 이 코드의 문제는 0을 지나서 마이스로 가기 때문에 cp가 1에 도달하면 스톱하는 조건 필요 -->\r\n");
      out.write("			<button type=\"button\" class=\"btn btn-sm Writing\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/list.bo?currentPage=");
      out.print( pi.getCurrentPage()-1 );
      out.write("'\" id=\"beforeBtn\"> &lt; </button>\r\n");
      out.write("				<script>\r\n");
      out.write("					if(");
      out.print( pi.getCurrentPage() );
      out.write(" <= 1){ /* 1페이지에 도달하면 버튼 비활성화 */\r\n");
      out.write("						$('#beforeBtn').prop('disabled',true); /* 속성 넣을 때 true/false 넣는건 프로퍼티 사용한다고 했었음 . 다양한 값이 들어갈 것은 attr 함수를 사용하는거고*/\r\n");
      out.write("					}\r\n");
      out.write("				</script>\r\n");
      out.write("			\r\n");
      out.write("			<!-- 숫자 페이지로 -->\r\n");
      out.write("			");
 for(int p = pi.getStartPage(); p <= pi.getEndPage(); p++){ 
      out.write("\r\n");
      out.write("				");
 if(p == pi.getCurrentPage()){ 
      out.write("\r\n");
      out.write("					<button type=\"button\" class=\"btn btn-sm Writing2\" id=\"choosen\" disabled>");
      out.print( p );
      out.write("</button>\r\n");
      out.write("				");
 } else{ 
      out.write("\r\n");
      out.write("					<button type=\"button\" class=\"btn btn-sm Writing2\" id=\"numBtn\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/board2Ch.bo?currentPage=");
      out.print( p );
      out.write('\'');
      out.write('"');
      out.write('>');
      out.print( p );
      out.write("</button>\r\n");
      out.write("				");
 } 
      out.write("\r\n");
      out.write("			");
 } 
      out.write("\r\n");
      out.write("			\r\n");
      out.write("			<!-- 다음 페이지로 -->\r\n");
      out.write("			<button type=\"button\" class=\"btn btn-sm Writing\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("\r\n");
      out.write("				/board2Ch.bo?currentPage=");
      out.print( pi.getCurrentPage()+1 );
      out.write("'\" id=\"afterBtn\"> &gt; </button>\r\n");
      out.write("				<script>\r\n");
      out.write("					if(");
      out.print( pi.getCurrentPage() );
      out.write(" >= ");
      out.print( pi.getLastPage() );
      out.write("){\r\n");
      out.write("						$('#afterBtn').prop('disabled', true);\r\n");
      out.write("					}\r\n");
      out.write("				</script>\r\n");
      out.write("			<!-- 맨 마지막으로 -->\r\n");
      out.write("			 <button type=\"button\" class=\"btn btn-sm Writing\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/board2Ch.bo?currentPage=");
      out.print( pi.getLastPage() );
      out.write("'\"> &gt;&gt; </button>\r\n");
      out.write("			\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<button type=\"button\" class=\"btn btn-sm Writing\" style=\"float: right;\"\r\n");
      out.write("        data-bs-toggle=\"button\" autocomplete=\"off\"\r\n");
      out.write("        onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/boardWriting.bo'\"\r\n");
      out.write("        >글쓰기\r\n");
      out.write("</button>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<br><br>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("  $(function(){\r\n");
      out.write("    $('#cardBoxDetail *').mouseenter(function(){\r\n");
      out.write("      $(this).parent().css({'border':'2px solid #F08000','cursor':'pointer'});\r\n");
      out.write("    }).mouseout(function(){\r\n");
      out.write("      $(this).parent().css('border','none'); \r\n");
      out.write("    }).click(function(){ \r\n");
      out.write("      var num1 = ");
      out.print( list.get(0).getBoardNo() );
      out.write("; \r\n");
      out.write("\r\n");
      out.write("      location.href = '");
      out.print( request.getContextPath() );
      out.write("/detail.bo?no=' + num1;\r\n");
      out.write("    });\r\n");
      out.write("  });\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
