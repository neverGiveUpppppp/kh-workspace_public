<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->


<!-- Basic DataSource 등록 -->	
	<!-- 이 DataSource를  SqlSession bean, DataSourceTransactionManager가 ref해서 사용하는 구조 -->
	<bean class="org.apache.commons.dbcp.BasicDataSource" id="realDataSource" destroy-method="close"> 
	<!-- destroy-method : 닫아주는 메소드로 close를 사용하겠다  -->
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="TREND_EATER"/>
		<property name="password" value="TREND_EATER"/>
	</bean>
	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="realDataSource"/>
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE"/>
				<property name="sqlPrefix" value="[SQL] "></property>
			</bean>
		</property>
	</bean>
	 
<!-- SqlSession 빈(bean) 등록 -->
	 <bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean"> <!-- mybatis라이브러리랑 mybatis Spring라이브러리를 미리 받아서 에러가 안드는 것 -->
	 	<property name="dataSource" ref="dataSource"/> <!-- 참고할거임. 데이터 소스를 참고할 것. id로 썼던 데이터소스를 의미  -->
	 	<!-- 마이바티스 컨피그에서 설정 정보를 설정했었음 -->
	 	<!-- 마이바티스 컨피그.xml파일을 읽어와야함 --> 
	 	<property name="configLocation" value="classpath:mybatis-config.xml"/>  
	 	<!-- classpath는 src/main/resource폴더를 의미함 --><!-- mybatis-config.xml 안만들었으니 만들러 ㄱㄱ -->
	 </bean> 
	 
<!-- Template 생성 -->
	<!-- SqlSessionFactoryBean를 ref함 -->
	 <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	 	<constructor-arg ref="sqlSession"/>  <!-- 매개변수 있는 생성자. 위의 1번 방법에 있는 그것-->
	 </bean>
 <!-- transactionManager : 트랜잭션 집어넣을 수 있게 -->
	 <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	 	<property name="dataSource" ref="dataSource"/>
	 </bean>
	 
	 <!-- 파일업로드 : multipartResolver -->
	 <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	 	<property name="maxUploadSize" value="100000000"/>	<!-- value : 용량 정하기 -->
		<property name="maxInMemorySize" value="100000000"/>
	 </bean>

	
	
		
</beans>
